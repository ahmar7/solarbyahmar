import { createApi } from "@reduxjs/toolkit/query/react";
import { customFetchBaseQuery } from "../baseQuery";

// Define the API slice
export const userApi = createApi({
    reducerPath: "userApi", // Unique name for the API slice
    baseQuery: customFetchBaseQuery(),
    tagTypes: ["User"], // Define the tag type for caching
    endpoints: (builder) => ({
        // Endpoint to fetch login history
        getLoginHistory: builder.query({
            query: () => `/auth/login_history`,
            transformResponse: (res) => res.data,
        }),
        // Endpoint to update a user
        updateProfile: builder.mutation({
            query: (data) => ({
                url: `/auth/profile`,
                method: "PUT",
                body: data
            })
        }),
        updateBilling: builder.mutation({
            query: (data) => ({
                url: `/auth/billing`,
                method: "PUT",
                body: data
            })
        }),
    }),
});

// Export hooks generated by RTK Query
export const { useGetLoginHistoryQuery, useUpdateBillingMutation, useUpdateProfileMutation } = userApi;
